version: "3.8"

services:
  web:
    container_name: web
    image: makeplane/plane-frontend:latest
    restart: always
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://api:8000

  space:
    container_name: space
    image: makeplane/plane-space:latest
    restart: always
    depends_on:
      - api
      - web
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://api:8000

  admin:
    container_name: admin
    image: makeplane/plane-admin:latest
    restart: always
    depends_on:
      - api
      - web
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://api:8000

  live:
    container_name: plane-live
    image: makeplane/plane-live:latest
    restart: always

  api:
    container_name: api
    image: makeplane/plane-backend:latest
    restart: always
    depends_on:
      - plane-db
      - plane-redis
    environment:
      DEBUG: ${DEBUG}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: plane-db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@plane-db:5432/${POSTGRES_DB}
      REDIS_HOST: plane-redis
      REDIS_PORT: 6379
      REDIS_URL: redis://plane-redis:6379/
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: http://plane-minio:9000
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT}
      USE_MINIO: 1
      WEB_URL: ${WEB_URL}
      GUNICORN_WORKERS: ${GUNICORN_WORKERS}
      SECRET_KEY: ${SECRET_KEY}

  worker:
    container_name: bgworker
    image: makeplane/plane-backend:latest
    restart: always
    command: ./bin/docker-entrypoint-worker.sh
    depends_on:
      - api
      - plane-db
      - plane-redis
    environment:
      DEBUG: ${DEBUG}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: plane-db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@plane-db:5432/${POSTGRES_DB}
      REDIS_HOST: plane-redis
      REDIS_PORT: 6379
      REDIS_URL: redis://plane-redis:6379/
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: http://plane-minio:9000
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT}
      USE_MINIO: 1
      SECRET_KEY: ${SECRET_KEY}

  beat-worker:
    container_name: beatworker
    image: makeplane/plane-backend:latest
    restart: always
    command: ./bin/docker-entrypoint-beat.sh
    depends_on:
      - api
      - plane-db
      - plane-redis
    environment:
      DEBUG: ${DEBUG}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: plane-db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@plane-db:5432/${POSTGRES_DB}
      REDIS_HOST: plane-redis
      REDIS_PORT: 6379
      REDIS_URL: redis://plane-redis:6379/
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: http://plane-minio:9000
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT}
      USE_MINIO: 1
      SECRET_KEY: ${SECRET_KEY}

  migrator:
    container_name: plane-migrator
    image: makeplane/plane-backend:latest
    restart: "no"
    command: ./bin/docker-entrypoint-migrator.sh
    depends_on:
      - plane-db
      - plane-redis
    environment:
      DEBUG: ${DEBUG}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: plane-db
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@plane-db:5432/${POSTGRES_DB}
      REDIS_HOST: plane-redis
      REDIS_PORT: 6379
      REDIS_URL: redis://plane-redis:6379/
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_ENDPOINT_URL: http://plane-minio:9000
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT}
      USE_MINIO: 1
      SECRET_KEY: ${SECRET_KEY}

  plane-db:
    container_name: plane-db
    image: postgres:15.7-alpine
    restart: always
    command: postgres -c 'max_connections=1000'
    volumes:
      - plane_pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data

  plane-redis:
    container_name: plane-redis
    image: valkey/valkey:7.2.5-alpine
    restart: always
    volumes:
      - plane_redisdata:/data

  plane-mq:
    container_name: plane-mq
    image: rabbitmq:3.13.6-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - plane_rabbitmq_data:/var/lib/rabbitmq

  plane-minio:
    container_name: plane-minio
    image: minio/minio:latest
    restart: always
    command: server /export --console-address ":9090"
    volumes:
      - plane_uploads:/export
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}

  proxy:
    container_name: proxy
    image: nginx:alpine
    restart: always
    ports:
      - "${PORT}:80"
    environment:
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT}
      BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
    depends_on:
      - web
      - api
      - space
      - admin
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  plane_pgdata:
  plane_redisdata:
  plane_uploads:
  plane_rabbitmq_data:
